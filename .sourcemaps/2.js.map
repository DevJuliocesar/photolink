{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/validators.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl, AbstractControl } from '@angular/forms';\n\nexport class MyValidators{\n\n  static isOld(control: FormControl){\n    let value = control.value;\n    if(value >= 18){\n      return null;\n    }else{\n      return {'isold': true}\n    }\n  }\n\n  static isValid(control: FormControl){\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\n    if (re){\n      return null;\n    }\n    return {\n      \"invalidEmail\": true\n    };\n  }\n\n  static passwordMatcher(group: AbstractControl){\n    let password = group.get('password').value;\n    let confimPassword = group.get('confirmPassword').value;\n    if(password === confimPassword){\n      return null;\n    }else{\n      return {'nomatch': true};\n    }\n\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/validators.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, AlertController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { MyValidators } from '../../validators/validators';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage {\n\n  public resetPasswordForm:FormGroup;\n\n  constructor(\n    public authData: AuthProvider, \n    public formBuilder: FormBuilder,\n    public nav: NavController, \n    public alertCtrl: AlertController) {\n    this.resetPasswordForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, MyValidators.isValid])],\n    })\n  }\n\n  resetPassword(){\n    if (!this.resetPasswordForm.valid){\n      console.log(this.resetPasswordForm.value);\n    } else {\n      this.authData.resetPassword(this.resetPasswordForm.value.email)\n      .then((user) => {\n        let alert = this.alertCtrl.create({\n          message: \"We just sent you a reset link to your email\",\n          buttons: [\n            {\n              text: \"Ok\",\n              role: 'cancel',\n              handler: () => {\n                this.nav.pop();\n              }\n            }\n          ]\n        });\n        alert.present();\n      }, (error) => {\n        var errorMessage: string = error.message;\n        let errorAlert = this.alertCtrl.create({\n          message: errorMessage,\n          buttons: [\n            {\n              text: \"Ok\",\n              role: 'cancel'\n            }\n          ]\n        });\n        errorAlert.present();\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}